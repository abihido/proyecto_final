// Generated from C:/Users/juanda/IdeaProjects/proyecto final/grammar\lengBasic.g4 by ANTLR 4.7.2
package grammar;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class lengBasicLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, CHAR=61, REAL=62, INT=63, BOOL=64, COT=65, IF=66, ELSE=67, WHile=68, 
		FOR=69, Do=70, LeftShift=71, RightShift=72, ID=73, BIBLIOTECA=74, WORD=75, 
		Whitespace=76, Newline=77, BlockComment=78, LineComment=79;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
			"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
			"T__57", "T__58", "T__59", "CHAR", "REAL", "INT", "BOOL", "COT", "IF", 
			"ELSE", "WHile", "FOR", "Do", "LeftShift", "RightShift", "ID", "BIBLIOTECA", 
			"WORD", "Whitespace", "Newline", "BlockComment", "LineComment"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'import'", "'using'", "'namespace'", "'std'", "'{'", "'}'", "'return'", 
			"'int main'", "'('", "')'", "'void'", "'?'", "':'", "'&&'", "'and'", 
			"'||'", "'or'", "'!'", "'=='", "'!='", "'&'", "'^'", "'|'", "'<'", "'>'", 
			"'<='", "'>='", "'*'", "'/'", "'%'", "'+'", "'-'", "'++'", "'--'", "'char'", 
			"'char16'", "'char32'", "'wchar'", "'bool'", "'auto'", "'string'", "'int'", 
			"'float'", "'double'", "','", "'short'", "'long'", "'signed'", "'unsigned'", 
			"'='", "'*='", "'/='", "'%='", "'+='", "'-='", "'&='", "'^='", "'|='", 
			"'['", "']'", null, null, null, null, "';'", "'if'", "'else'", "'while'", 
			"'for'", "'do'", "'<<'", "'>>'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, "CHAR", "REAL", "INT", "BOOL", "COT", "IF", "ELSE", "WHile", "FOR", 
			"Do", "LeftShift", "RightShift", "ID", "BIBLIOTECA", "WORD", "Whitespace", 
			"Newline", "BlockComment", "LineComment"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public lengBasicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "lengBasic.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2Q\u0217\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\3\2\3\2\3\2\3\2\3\2\3\2"+
		"\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3"+
		"\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r"+
		"\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22"+
		"\3\22\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30"+
		"\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36"+
		"\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%"+
		"\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3("+
		"\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,"+
		"\3,\3-\3-\3-\3-\3-\3-\3-\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3"+
		"\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3"+
		"\62\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3"+
		"\67\3\67\3\67\38\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3<\3<\3=\3=\3>\3>\3"+
		"?\6?\u018c\n?\r?\16?\u018d\3?\6?\u0191\n?\r?\16?\u0192\3?\6?\u0196\n?"+
		"\r?\16?\u0197\3@\6@\u019b\n@\r@\16@\u019c\3A\3A\3A\3A\3A\3A\3A\3A\3A\3"+
		"A\5A\u01a9\nA\3B\3B\3C\3C\3C\3D\3D\3D\3D\3D\3E\3E\3E\3E\3E\3E\3F\3F\3"+
		"F\3F\3G\3G\3G\3H\3H\3H\3I\3I\3I\3J\6J\u01c9\nJ\rJ\16J\u01ca\3J\7J\u01ce"+
		"\nJ\fJ\16J\u01d1\13J\3K\3K\3K\3K\3K\3K\3K\3K\3K\3K\3K\3K\3K\3K\5K\u01e1"+
		"\nK\3L\3L\3L\3L\3L\7L\u01e8\nL\fL\16L\u01eb\13L\3L\3L\3M\6M\u01f0\nM\r"+
		"M\16M\u01f1\3M\3M\3N\3N\5N\u01f8\nN\3N\5N\u01fb\nN\3N\3N\3O\3O\3O\3O\7"+
		"O\u0203\nO\fO\16O\u0206\13O\3O\3O\3O\3O\3O\3P\3P\3P\3P\7P\u0211\nP\fP"+
		"\16P\u0214\13P\3P\3P\3\u0204\2Q\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60"+
		"_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085"+
		"D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095L\u0097M\u0099"+
		"N\u009bO\u009dP\u009fQ\3\2\b\5\2&\'\61\61^^\3\2\62;\3\2\62\63\5\2C\\a"+
		"ac|\4\2\13\13\"\"\4\2\f\f\17\17\2\u0228\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3"+
		"\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2"+
		"\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35"+
		"\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)"+
		"\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2"+
		"\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2"+
		"A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3"+
		"\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2"+
		"\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2"+
		"g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3"+
		"\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3"+
		"\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2"+
		"\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091"+
		"\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2"+
		"\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\3\u00a1\3\2\2\2\5\u00a8"+
		"\3\2\2\2\7\u00ae\3\2\2\2\t\u00b8\3\2\2\2\13\u00bc\3\2\2\2\r\u00be\3\2"+
		"\2\2\17\u00c0\3\2\2\2\21\u00c7\3\2\2\2\23\u00d0\3\2\2\2\25\u00d2\3\2\2"+
		"\2\27\u00d4\3\2\2\2\31\u00d9\3\2\2\2\33\u00db\3\2\2\2\35\u00dd\3\2\2\2"+
		"\37\u00e0\3\2\2\2!\u00e4\3\2\2\2#\u00e7\3\2\2\2%\u00ea\3\2\2\2\'\u00ec"+
		"\3\2\2\2)\u00ef\3\2\2\2+\u00f2\3\2\2\2-\u00f4\3\2\2\2/\u00f6\3\2\2\2\61"+
		"\u00f8\3\2\2\2\63\u00fa\3\2\2\2\65\u00fc\3\2\2\2\67\u00ff\3\2\2\29\u0102"+
		"\3\2\2\2;\u0104\3\2\2\2=\u0106\3\2\2\2?\u0108\3\2\2\2A\u010a\3\2\2\2C"+
		"\u010c\3\2\2\2E\u010f\3\2\2\2G\u0112\3\2\2\2I\u0117\3\2\2\2K\u011e\3\2"+
		"\2\2M\u0125\3\2\2\2O\u012b\3\2\2\2Q\u0130\3\2\2\2S\u0135\3\2\2\2U\u013c"+
		"\3\2\2\2W\u0140\3\2\2\2Y\u0146\3\2\2\2[\u014d\3\2\2\2]\u014f\3\2\2\2_"+
		"\u0155\3\2\2\2a\u015a\3\2\2\2c\u0161\3\2\2\2e\u016a\3\2\2\2g\u016c\3\2"+
		"\2\2i\u016f\3\2\2\2k\u0172\3\2\2\2m\u0175\3\2\2\2o\u0178\3\2\2\2q\u017b"+
		"\3\2\2\2s\u017e\3\2\2\2u\u0181\3\2\2\2w\u0184\3\2\2\2y\u0186\3\2\2\2{"+
		"\u0188\3\2\2\2}\u018b\3\2\2\2\177\u019a\3\2\2\2\u0081\u01a8\3\2\2\2\u0083"+
		"\u01aa\3\2\2\2\u0085\u01ac\3\2\2\2\u0087\u01af\3\2\2\2\u0089\u01b4\3\2"+
		"\2\2\u008b\u01ba\3\2\2\2\u008d\u01be\3\2\2\2\u008f\u01c1\3\2\2\2\u0091"+
		"\u01c4\3\2\2\2\u0093\u01c8\3\2\2\2\u0095\u01e0\3\2\2\2\u0097\u01e2\3\2"+
		"\2\2\u0099\u01ef\3\2\2\2\u009b\u01fa\3\2\2\2\u009d\u01fe\3\2\2\2\u009f"+
		"\u020c\3\2\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3\7o\2\2\u00a3\u00a4\7r\2"+
		"\2\u00a4\u00a5\7q\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7v\2\2\u00a7\4\3"+
		"\2\2\2\u00a8\u00a9\7w\2\2\u00a9\u00aa\7u\2\2\u00aa\u00ab\7k\2\2\u00ab"+
		"\u00ac\7p\2\2\u00ac\u00ad\7i\2\2\u00ad\6\3\2\2\2\u00ae\u00af\7p\2\2\u00af"+
		"\u00b0\7c\2\2\u00b0\u00b1\7o\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7u\2\2"+
		"\u00b3\u00b4\7r\2\2\u00b4\u00b5\7c\2\2\u00b5\u00b6\7e\2\2\u00b6\u00b7"+
		"\7g\2\2\u00b7\b\3\2\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7v\2\2\u00ba\u00bb"+
		"\7f\2\2\u00bb\n\3\2\2\2\u00bc\u00bd\7}\2\2\u00bd\f\3\2\2\2\u00be\u00bf"+
		"\7\177\2\2\u00bf\16\3\2\2\2\u00c0\u00c1\7t\2\2\u00c1\u00c2\7g\2\2\u00c2"+
		"\u00c3\7v\2\2\u00c3\u00c4\7w\2\2\u00c4\u00c5\7t\2\2\u00c5\u00c6\7p\2\2"+
		"\u00c6\20\3\2\2\2\u00c7\u00c8\7k\2\2\u00c8\u00c9\7p\2\2\u00c9\u00ca\7"+
		"v\2\2\u00ca\u00cb\7\"\2\2\u00cb\u00cc\7o\2\2\u00cc\u00cd\7c\2\2\u00cd"+
		"\u00ce\7k\2\2\u00ce\u00cf\7p\2\2\u00cf\22\3\2\2\2\u00d0\u00d1\7*\2\2\u00d1"+
		"\24\3\2\2\2\u00d2\u00d3\7+\2\2\u00d3\26\3\2\2\2\u00d4\u00d5\7x\2\2\u00d5"+
		"\u00d6\7q\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7f\2\2\u00d8\30\3\2\2\2\u00d9"+
		"\u00da\7A\2\2\u00da\32\3\2\2\2\u00db\u00dc\7<\2\2\u00dc\34\3\2\2\2\u00dd"+
		"\u00de\7(\2\2\u00de\u00df\7(\2\2\u00df\36\3\2\2\2\u00e0\u00e1\7c\2\2\u00e1"+
		"\u00e2\7p\2\2\u00e2\u00e3\7f\2\2\u00e3 \3\2\2\2\u00e4\u00e5\7~\2\2\u00e5"+
		"\u00e6\7~\2\2\u00e6\"\3\2\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9\7t\2\2\u00e9"+
		"$\3\2\2\2\u00ea\u00eb\7#\2\2\u00eb&\3\2\2\2\u00ec\u00ed\7?\2\2\u00ed\u00ee"+
		"\7?\2\2\u00ee(\3\2\2\2\u00ef\u00f0\7#\2\2\u00f0\u00f1\7?\2\2\u00f1*\3"+
		"\2\2\2\u00f2\u00f3\7(\2\2\u00f3,\3\2\2\2\u00f4\u00f5\7`\2\2\u00f5.\3\2"+
		"\2\2\u00f6\u00f7\7~\2\2\u00f7\60\3\2\2\2\u00f8\u00f9\7>\2\2\u00f9\62\3"+
		"\2\2\2\u00fa\u00fb\7@\2\2\u00fb\64\3\2\2\2\u00fc\u00fd\7>\2\2\u00fd\u00fe"+
		"\7?\2\2\u00fe\66\3\2\2\2\u00ff\u0100\7@\2\2\u0100\u0101\7?\2\2\u01018"+
		"\3\2\2\2\u0102\u0103\7,\2\2\u0103:\3\2\2\2\u0104\u0105\7\61\2\2\u0105"+
		"<\3\2\2\2\u0106\u0107\7\'\2\2\u0107>\3\2\2\2\u0108\u0109\7-\2\2\u0109"+
		"@\3\2\2\2\u010a\u010b\7/\2\2\u010bB\3\2\2\2\u010c\u010d\7-\2\2\u010d\u010e"+
		"\7-\2\2\u010eD\3\2\2\2\u010f\u0110\7/\2\2\u0110\u0111\7/\2\2\u0111F\3"+
		"\2\2\2\u0112\u0113\7e\2\2\u0113\u0114\7j\2\2\u0114\u0115\7c\2\2\u0115"+
		"\u0116\7t\2\2\u0116H\3\2\2\2\u0117\u0118\7e\2\2\u0118\u0119\7j\2\2\u0119"+
		"\u011a\7c\2\2\u011a\u011b\7t\2\2\u011b\u011c\7\63\2\2\u011c\u011d\78\2"+
		"\2\u011dJ\3\2\2\2\u011e\u011f\7e\2\2\u011f\u0120\7j\2\2\u0120\u0121\7"+
		"c\2\2\u0121\u0122\7t\2\2\u0122\u0123\7\65\2\2\u0123\u0124\7\64\2\2\u0124"+
		"L\3\2\2\2\u0125\u0126\7y\2\2\u0126\u0127\7e\2\2\u0127\u0128\7j\2\2\u0128"+
		"\u0129\7c\2\2\u0129\u012a\7t\2\2\u012aN\3\2\2\2\u012b\u012c\7d\2\2\u012c"+
		"\u012d\7q\2\2\u012d\u012e\7q\2\2\u012e\u012f\7n\2\2\u012fP\3\2\2\2\u0130"+
		"\u0131\7c\2\2\u0131\u0132\7w\2\2\u0132\u0133\7v\2\2\u0133\u0134\7q\2\2"+
		"\u0134R\3\2\2\2\u0135\u0136\7u\2\2\u0136\u0137\7v\2\2\u0137\u0138\7t\2"+
		"\2\u0138\u0139\7k\2\2\u0139\u013a\7p\2\2\u013a\u013b\7i\2\2\u013bT\3\2"+
		"\2\2\u013c\u013d\7k\2\2\u013d\u013e\7p\2\2\u013e\u013f\7v\2\2\u013fV\3"+
		"\2\2\2\u0140\u0141\7h\2\2\u0141\u0142\7n\2\2\u0142\u0143\7q\2\2\u0143"+
		"\u0144\7c\2\2\u0144\u0145\7v\2\2\u0145X\3\2\2\2\u0146\u0147\7f\2\2\u0147"+
		"\u0148\7q\2\2\u0148\u0149\7w\2\2\u0149\u014a\7d\2\2\u014a\u014b\7n\2\2"+
		"\u014b\u014c\7g\2\2\u014cZ\3\2\2\2\u014d\u014e\7.\2\2\u014e\\\3\2\2\2"+
		"\u014f\u0150\7u\2\2\u0150\u0151\7j\2\2\u0151\u0152\7q\2\2\u0152\u0153"+
		"\7t\2\2\u0153\u0154\7v\2\2\u0154^\3\2\2\2\u0155\u0156\7n\2\2\u0156\u0157"+
		"\7q\2\2\u0157\u0158\7p\2\2\u0158\u0159\7i\2\2\u0159`\3\2\2\2\u015a\u015b"+
		"\7u\2\2\u015b\u015c\7k\2\2\u015c\u015d\7i\2\2\u015d\u015e\7p\2\2\u015e"+
		"\u015f\7g\2\2\u015f\u0160\7f\2\2\u0160b\3\2\2\2\u0161\u0162\7w\2\2\u0162"+
		"\u0163\7p\2\2\u0163\u0164\7u\2\2\u0164\u0165\7k\2\2\u0165\u0166\7i\2\2"+
		"\u0166\u0167\7p\2\2\u0167\u0168\7g\2\2\u0168\u0169\7f\2\2\u0169d\3\2\2"+
		"\2\u016a\u016b\7?\2\2\u016bf\3\2\2\2\u016c\u016d\7,\2\2\u016d\u016e\7"+
		"?\2\2\u016eh\3\2\2\2\u016f\u0170\7\61\2\2\u0170\u0171\7?\2\2\u0171j\3"+
		"\2\2\2\u0172\u0173\7\'\2\2\u0173\u0174\7?\2\2\u0174l\3\2\2\2\u0175\u0176"+
		"\7-\2\2\u0176\u0177\7?\2\2\u0177n\3\2\2\2\u0178\u0179\7/\2\2\u0179\u017a"+
		"\7?\2\2\u017ap\3\2\2\2\u017b\u017c\7(\2\2\u017c\u017d\7?\2\2\u017dr\3"+
		"\2\2\2\u017e\u017f\7`\2\2\u017f\u0180\7?\2\2\u0180t\3\2\2\2\u0181\u0182"+
		"\7~\2\2\u0182\u0183\7?\2\2\u0183v\3\2\2\2\u0184\u0185\7]\2\2\u0185x\3"+
		"\2\2\2\u0186\u0187\7_\2\2\u0187z\3\2\2\2\u0188\u0189\t\2\2\2\u0189|\3"+
		"\2\2\2\u018a\u018c\t\3\2\2\u018b\u018a\3\2\2\2\u018c\u018d\3\2\2\2\u018d"+
		"\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u0190\3\2\2\2\u018f\u0191\7\60"+
		"\2\2\u0190\u018f\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u0190\3\2\2\2\u0192"+
		"\u0193\3\2\2\2\u0193\u0195\3\2\2\2\u0194\u0196\t\3\2\2\u0195\u0194\3\2"+
		"\2\2\u0196\u0197\3\2\2\2\u0197\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198"+
		"~\3\2\2\2\u0199\u019b\t\3\2\2\u019a\u0199\3\2\2\2\u019b\u019c\3\2\2\2"+
		"\u019c\u019a\3\2\2\2\u019c\u019d\3\2\2\2\u019d\u0080\3\2\2\2\u019e\u01a9"+
		"\t\4\2\2\u019f\u01a0\7v\2\2\u01a0\u01a1\7t\2\2\u01a1\u01a2\7w\2\2\u01a2"+
		"\u01a9\7g\2\2\u01a3\u01a4\7h\2\2\u01a4\u01a5\7c\2\2\u01a5\u01a6\7n\2\2"+
		"\u01a6\u01a7\7u\2\2\u01a7\u01a9\7g\2\2\u01a8\u019e\3\2\2\2\u01a8\u019f"+
		"\3\2\2\2\u01a8\u01a3\3\2\2\2\u01a9\u0082\3\2\2\2\u01aa\u01ab\7=\2\2\u01ab"+
		"\u0084\3\2\2\2\u01ac\u01ad\7k\2\2\u01ad\u01ae\7h\2\2\u01ae\u0086\3\2\2"+
		"\2\u01af\u01b0\7g\2\2\u01b0\u01b1\7n\2\2\u01b1\u01b2\7u\2\2\u01b2\u01b3"+
		"\7g\2\2\u01b3\u0088\3\2\2\2\u01b4\u01b5\7y\2\2\u01b5\u01b6\7j\2\2\u01b6"+
		"\u01b7\7k\2\2\u01b7\u01b8\7n\2\2\u01b8\u01b9\7g\2\2\u01b9\u008a\3\2\2"+
		"\2\u01ba\u01bb\7h\2\2\u01bb\u01bc\7q\2\2\u01bc\u01bd\7t\2\2\u01bd\u008c"+
		"\3\2\2\2\u01be\u01bf\7f\2\2\u01bf\u01c0\7q\2\2\u01c0\u008e\3\2\2\2\u01c1"+
		"\u01c2\7>\2\2\u01c2\u01c3\7>\2\2\u01c3\u0090\3\2\2\2\u01c4\u01c5\7@\2"+
		"\2\u01c5\u01c6\7@\2\2\u01c6\u0092\3\2\2\2\u01c7\u01c9\t\5\2\2\u01c8\u01c7"+
		"\3\2\2\2\u01c9\u01ca\3\2\2\2\u01ca\u01c8\3\2\2\2\u01ca\u01cb\3\2\2\2\u01cb"+
		"\u01cf\3\2\2\2\u01cc\u01ce\t\3\2\2\u01cd\u01cc\3\2\2\2\u01ce\u01d1\3\2"+
		"\2\2\u01cf\u01cd\3\2\2\2\u01cf\u01d0\3\2\2\2\u01d0\u0094\3\2\2\2\u01d1"+
		"\u01cf\3\2\2\2\u01d2\u01d3\7$\2\2\u01d3\u01d4\5\u0093J\2\u01d4\u01d5\7"+
		"\60\2\2\u01d5\u01d6\7j\2\2\u01d6\u01d7\3\2\2\2\u01d7\u01d8\7$\2\2\u01d8"+
		"\u01e1\3\2\2\2\u01d9\u01da\7>\2\2\u01da\u01db\5\u0093J\2\u01db\u01dc\7"+
		"\60\2\2\u01dc\u01dd\7j\2\2\u01dd\u01de\3\2\2\2\u01de\u01df\7@\2\2\u01df"+
		"\u01e1\3\2\2\2\u01e0\u01d2\3\2\2\2\u01e0\u01d9\3\2\2\2\u01e1\u0096\3\2"+
		"\2\2\u01e2\u01e9\7$\2\2\u01e3\u01e8\5\u0093J\2\u01e4\u01e8\5\177@\2\u01e5"+
		"\u01e8\5}?\2\u01e6\u01e8\7\"\2\2\u01e7\u01e3\3\2\2\2\u01e7\u01e4\3\2\2"+
		"\2\u01e7\u01e5\3\2\2\2\u01e7\u01e6\3\2\2\2\u01e8\u01eb\3\2\2\2\u01e9\u01e7"+
		"\3\2\2\2\u01e9\u01ea\3\2\2\2\u01ea\u01ec\3\2\2\2\u01eb\u01e9\3\2\2\2\u01ec"+
		"\u01ed\7$\2\2\u01ed\u0098\3\2\2\2\u01ee\u01f0\t\6\2\2\u01ef\u01ee\3\2"+
		"\2\2\u01f0\u01f1\3\2\2\2\u01f1\u01ef\3\2\2\2\u01f1\u01f2\3\2\2\2\u01f2"+
		"\u01f3\3\2\2\2\u01f3\u01f4\bM\2\2\u01f4\u009a\3\2\2\2\u01f5\u01f7\7\17"+
		"\2\2\u01f6\u01f8\7\f\2\2\u01f7\u01f6\3\2\2\2\u01f7\u01f8\3\2\2\2\u01f8"+
		"\u01fb\3\2\2\2\u01f9\u01fb\7\f\2\2\u01fa\u01f5\3\2\2\2\u01fa\u01f9\3\2"+
		"\2\2\u01fb\u01fc\3\2\2\2\u01fc\u01fd\bN\2\2\u01fd\u009c\3\2\2\2\u01fe"+
		"\u01ff\7\61\2\2\u01ff\u0200\7,\2\2\u0200\u0204\3\2\2\2\u0201\u0203\13"+
		"\2\2\2\u0202\u0201\3\2\2\2\u0203\u0206\3\2\2\2\u0204\u0205\3\2\2\2\u0204"+
		"\u0202\3\2\2\2\u0205\u0207\3\2\2\2\u0206\u0204\3\2\2\2\u0207\u0208\7,"+
		"\2\2\u0208\u0209\7\61\2\2\u0209\u020a\3\2\2\2\u020a\u020b\bO\2\2\u020b"+
		"\u009e\3\2\2\2\u020c\u020d\7\61\2\2\u020d\u020e\7\61\2\2\u020e\u0212\3"+
		"\2\2\2\u020f\u0211\n\7\2\2\u0210\u020f\3\2\2\2\u0211\u0214\3\2\2\2\u0212"+
		"\u0210\3\2\2\2\u0212\u0213\3\2\2\2\u0213\u0215\3\2\2\2\u0214\u0212\3\2"+
		"\2\2\u0215\u0216\bP\2\2\u0216\u00a0\3\2\2\2\22\2\u018d\u0192\u0197\u019c"+
		"\u01a8\u01ca\u01cf\u01e0\u01e7\u01e9\u01f1\u01f7\u01fa\u0204\u0212\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}